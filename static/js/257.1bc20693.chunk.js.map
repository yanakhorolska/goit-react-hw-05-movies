{"version":3,"file":"static/js/257.1bc20693.chunk.js","mappings":"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","sources":["components/fetchApi.jsx","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '0ad512fb225eecaea999568cb90b6aa0';\naxios.defaults.baseURL = `https://api.themoviedb.org/3`;\n\nexport const fetchTrendingApi = async () => {\n  const { data } = await axios.get(\n    `/trending/movie/day?api_key=${API_KEY}&page=1`\n  );\n  return data;\n};\nexport const fetchSearchApi = async query => {\n  const { data } = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n  return data;\n};\nexport const fetchMovieDetails = async id => {\n  const { data } = await axios.get(\n    `/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\nexport const fetchMovieGenres = async () => {\n  const { data } = await axios.get(\n    `/genre/movie/list?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\nexport const fetchCast = async id => {\n  const { data } = await axios.get(\n    `/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\nexport const fetchReview = async id => {\n  const { data } = await axios.get(\n    `/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return data;\n};\n","import styled from 'styled-components';\nimport { NavLink, Link } from 'react-router-dom';\n\nexport const MovieCard = styled('div')`\n  display: flex;\n  padding: 20px;\n  gap: 50px;\n  justify-content: center;\n  background-color: black;\n`;\nexport const MovieImg = styled('img')`\n  display: block;\n`;\nexport const MovieAbout = styled('div')`\n  padding: 20px;\n  border: 2px solid black;\n  width: 600px;\n  background-color: white;\n`;\nexport const MovieTitle = styled('h2')`\n  text-align: center;\n  font-size: 35px;\n`;\nexport const MovieScore = styled('p')`\n  font-size: 25px;\n`;\nexport const MovieOverview = styled('h3')`\n  font-size: 25px;\n`;\nexport const MovieOverviewText = styled('p')`\n  font-size: 20px;\n`;\nexport const MovieGenres = styled('h3')`\n  font-size: 25px;\n`;\nexport const MovieGenresText = styled('p')`\n  font-size: 25px;\n`;\nexport const MovieAdditional = styled('div')`\n  padding: 50px;\n`;\nexport const MovieAdditionalTitle = styled('h3')`\n  margin-top: 0;\n  font-size: 25px;\n`;\nexport const NavItem = styled(NavLink)`\n  display: inline-block;\n  padding: 10px;\n  text-decoration: none;\n  font-size: 25px;\n  color: black;\n  &.active {\n    border-radius: 5px;\n    color: white;\n    background-color: black;\n  }\n  &:not(:last-child) {\n    margin-right: 20px;\n  }\n`;\nexport const LinkButton = styled(Link)`\n  display: inline-block;\n  padding: 10px;\n  text-decoration: none;\n  font-size: 20px;\n  color: white;\n  background-color: black;\n`;\nexport const LinkBox = styled('div')`\n  background-color: white;\n  padding: 20px;\n`;\n","import { useParams, useLocation, Outlet } from 'react-router-dom';\nimport { useState, useEffect, Suspense } from 'react';\nimport { fetchMovieDetails } from 'components/fetchApi';\n\nimport {\n  MovieCard,\n  MovieImg,\n  MovieAbout,\n  MovieTitle,\n  MovieScore,\n  MovieOverview,\n  MovieOverviewText,\n  MovieGenres,\n  MovieGenresText,\n  MovieAdditional,\n  MovieAdditionalTitle,\n  NavItem,\n  LinkButton,\n  LinkBox,\n} from './MovieDetails.styled';\n\nexport const MovieDetails = () => {\n  const location = useLocation();\n  const [movie, setMovie] = useState(null);\n  const { movieId } = useParams();\n  const backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    fetchMovieDetails(Number(movieId)).then(setMovie);\n  }, [movieId]);\n\n  if (!movie) {\n    return null;\n  }\n\n  let posterPath;\n  if (movie.poster_path) {\n    posterPath = `https://image.tmdb.org/t/p/w400/${movie.poster_path}`;\n  } else {\n    posterPath =\n      'https://cdn.create.vista.com/api/media/small/324908572/stock-vector-3d-cinema-film-strip-in';\n  }\n  const { overview, title, release_date, genres, vote_average } = movie;\n  return (\n    <>\n      <LinkBox>\n        {' '}\n        <LinkButton to={backLinkHref}>Back to all movies</LinkButton>\n      </LinkBox>\n      <MovieCard>\n        <MovieImg src={posterPath} alt={title} />\n        <MovieAbout>\n          <MovieTitle>\n            \"{title}\"({new Date(release_date).getFullYear()})\n          </MovieTitle>\n          <MovieScore>User Score: {Math.round(vote_average * 10)}%</MovieScore>\n          <MovieOverview>Overview</MovieOverview>\n          <MovieOverviewText>{overview}</MovieOverviewText>\n          <MovieGenres>Genres</MovieGenres>\n          <MovieGenresText>\n            {genres.map(genre => genre.name).join(', ')}\n          </MovieGenresText>\n        </MovieAbout>\n      </MovieCard>\n\n      <MovieAdditional>\n        <MovieAdditionalTitle>Additiona information</MovieAdditionalTitle>\n        <NavItem to={'cast'} state={location.state}>\n          Cast\n        </NavItem>\n        <NavItem to={'reviews'} state={location.state}>\n          Reviews\n        </NavItem>\n      </MovieAdditional>\n\n      <Suspense fallback={null}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n"],"names":["API_KEY","axios","fetchTrendingApi","data","fetchSearchApi","query","fetchMovieDetails","id","fetchCast","fetchReview","MovieCard","styled","MovieImg","MovieAbout","MovieTitle","MovieScore","MovieOverview","MovieOverviewText","MovieGenres","MovieGenresText","MovieAdditional","MovieAdditionalTitle","NavItem","NavLink","LinkButton","Link","LinkBox","MovieDetails","posterPath","location","useLocation","useState","movie","setMovie","movieId","useParams","backLinkHref","state","from","useEffect","Number","then","poster_path","overview","title","release_date","genres","vote_average","to","src","alt","Date","getFullYear","Math","round","map","genre","name","join","Suspense","fallback"],"sourceRoot":""}