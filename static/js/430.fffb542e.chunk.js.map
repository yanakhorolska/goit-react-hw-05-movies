{"version":3,"file":"static/js/430.fffb542e.chunk.js","mappings":"sOAEaA,GAAeC,E,OAAAA,IAAO,IAAPA,CAAH,mF,SCGZC,EAAU,WACrB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAYC,OAAOP,IAAUQ,MAAK,gBAAGC,EAAH,EAAGA,QAAH,OAAiBL,EAAWK,EAA5B,GACnC,GAAE,CAACT,IAEAG,EAAU,GACL,SAACN,EAAD,iDAIP,yBACGM,EAAQO,KAAI,SAAAC,GAAM,OACjB,4BACE,0BACE,mCADF,IACkBA,EAAOC,WAEzB,0BACE,oCADF,IACmBD,EAAOE,YAE1B,oBAPQF,EAAOG,GADA,KAaxB,C,6LC9BKC,EAAU,mCAChBC,EAAAA,GAAAA,SAAAA,QAAA,+BAEO,IAAMC,EAAgB,mCAAG,sGACPD,EAAAA,GAAAA,IAAA,sCACUD,EADV,YADO,uBACtBG,EADsB,EACtBA,KADsB,kBAIvBA,GAJuB,2CAAH,qDAMhBC,EAAc,mCAAG,WAAMC,GAAN,yFACLJ,EAAAA,GAAAA,IAAA,gCACID,EADJ,kBACqBK,EADrB,+CADK,uBACpBF,EADoB,EACpBA,KADoB,kBAIrBA,GAJqB,2CAAH,sDAMdG,EAAiB,mCAAG,WAAMP,GAAN,yFACRE,EAAAA,GAAAA,IAAA,iBACXF,EADW,oBACGC,EADH,oBADQ,uBACvBG,EADuB,EACvBA,KADuB,kBAIxBA,GAJwB,2CAAH,sDAYjBI,EAAS,mCAAG,WAAMR,GAAN,yFACAE,EAAAA,GAAAA,IAAA,iBACXF,EADW,4BACWC,EADX,oBADA,uBACfG,EADe,EACfA,KADe,kBAIhBA,GAJgB,2CAAH,sDAMTZ,EAAW,mCAAG,WAAMQ,GAAN,yFACFE,EAAAA,GAAAA,IAAA,iBACXF,EADW,4BACWC,EADX,2BADE,uBACjBG,EADiB,EACjBA,KADiB,kBAIlBA,GAJkB,2CAAH,qD","sources":["components/Review/Reviews.styled.jsx","components/Review/Reviews.jsx","components/fetchApi.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewsError = styled('p')`\n  padding: px;\n  text-align: center;\n  font-size: 30px;\n`;\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { fetchReview } from 'components/fetchApi';\nimport { ReviewsError } from './Reviews.styled';\n\nexport const Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    fetchReview(Number(movieId)).then(({ results }) => setReviews(results));\n  }, [movieId]);\n\n  if (reviews < 1) {\n    return <ReviewsError>Sorry, we don't have any reviews!</ReviewsError>;\n  }\n\n  return (\n    <div>\n      {reviews.map(review => (\n        <div key={review.id}>\n          <p>\n            <b>Author:</b> {review.author}\n          </p>\n          <p>\n            <b>Content:</b> {review.content}\n          </p>\n          <hr />\n        </div>\n      ))}\n    </div>\n  );\n};\n","import axios from 'axios';\n\nconst API_KEY = '0ad512fb225eecaea999568cb90b6aa0';\naxios.defaults.baseURL = `https://api.themoviedb.org/3`;\n\nexport const fetchTrendingApi = async () => {\n  const { data } = await axios.get(\n    `/trending/movie/day?api_key=${API_KEY}&page=1`\n  );\n  return data;\n};\nexport const fetchSearchApi = async query => {\n  const { data } = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n  return data;\n};\nexport const fetchMovieDetails = async id => {\n  const { data } = await axios.get(\n    `/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\nexport const fetchMovieGenres = async () => {\n  const { data } = await axios.get(\n    `/genre/movie/list?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\nexport const fetchCast = async id => {\n  const { data } = await axios.get(\n    `/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\nexport const fetchReview = async id => {\n  const { data } = await axios.get(\n    `/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return data;\n};\n"],"names":["ReviewsError","styled","Reviews","movieId","useParams","useState","reviews","setReviews","useEffect","fetchReview","Number","then","results","map","review","author","content","id","API_KEY","axios","fetchTrendingApi","data","fetchSearchApi","query","fetchMovieDetails","fetchCast"],"sourceRoot":""}